<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

// Belts
const int FEEDER=2;
typedef int[0, FEEDER-1] f_id;

bool S[FEEDER]; //Sensor breach from laser
bool R[FEEDER]; //Recording on

// Items
const int NUM_ITEMS=2;
typedef int[0, NUM_ITEMS-1] t_id;

// Limit run
int MAX_ITEMS=10;
int ITEM_COUNT=0;

int RECORD =0;

const int NUM_ITEM_TYPES=1;

typedef scalar[NUM_ITEM_TYPES] s_t;

int array[NUM_ITEM_TYPES];
int ItemDetected;

chan ItemArrive[FEEDER];
//chan ItemArrive; //used by the user to set the bags on the feed
//chan SignalUnbreached; //used by the user to set the bags on the feed
//urgent chan ItemRead;
urgent chan next;
urgent broadcast chan go;


urgent chan recordOn, recordOff; //used by the user to set the bags on the feed


//Sleeping time of the control and item feeder
int sleep09 = 9; 
int sleep05 = 5;
int sleep23 = 23;</declaration>
	<template>
		<name>Video</name>
		<parameter>f_id feed_id</parameter>
		<declaration>clock x;</declaration>
		<location id="id0" x="-68" y="119">
			<name x="-93" y="127">On</name>
		</location>
		<location id="id1" x="42" y="0">
			<name x="34" y="-34">Off</name>
		</location>
		<location id="id2" x="-68" y="0">
			<name x="-119" y="-34">Finish</name>
			<urgent/>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-59" y="51">not R[feed_id]</label>
			<label kind="synchronisation" x="-59" y="34">go!</label>
			<label kind="assignment" x="-59" y="68">RECORD++</label>
			<nail x="-68" y="93"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="85" y="51">R[feed_id]</label>
			<label kind="synchronisation" x="85" y="34">go!</label>
			<label kind="assignment" x="85" y="68">x:=0</label>
			<nail x="76" y="34"/>
			<nail x="76" y="93"/>
			<nail x="34" y="119"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Item</name>
		<parameter>t_id item_id, f_id feed_id</parameter>
		<declaration>// Place local declarations here.
clock t1;         //per element clock
clock t2;        //from fully entering the video zone
//int ITEM;
//string item;</declaration>
		<location id="id3" x="102" y="271">
			<name x="119" y="246">LeftVideoZone</name>
			<urgent/>
		</location>
		<location id="id4" x="102" y="195">
			<name x="26" y="161">VideoZone</name>
			<label kind="invariant" x="119" y="186">t1&lt;=20</label>
		</location>
		<location id="id5" x="102" y="127">
			<name x="0" y="101">PreVideoZone</name>
			<label kind="invariant" x="119" y="118">t2&lt;=5</label>
		</location>
		<location id="id6" x="102" y="34">
			<name x="9" y="9">LaserBreach</name>
			<label kind="invariant" x="119" y="25">t1&lt;=5</label>
		</location>
		<location id="id7" x="102" y="-68">
			<name x="51" y="-93">initial</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="110" y="144">t2==5</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id7"/>
			<nail x="0" y="229"/>
			<nail x="0" y="-17"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="110" y="212">t1==20</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="110" y="51">t1&gt;=3</label>
			<label kind="assignment" x="110" y="68">S[feed_id]=false, 
t2:=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="110" y="-51">ItemArrive[feed_id]?</label>
			<label kind="assignment" x="110" y="-34">t1:=0, ITEM_COUNT++,
S[feed_id]=true</label>
		</transition>
	</template>
	<template>
		<name>Controller</name>
		<parameter>f_id feed_id</parameter>
		<declaration>// Place local declarations here.
clock x;        //per element clock
clock y;        //total time
// clock z;        //per element clock

//int ItemIdentified;
</declaration>
		<location id="id8" x="-306" y="-204">
			<name x="-433" y="-229">SendIdentification</name>
		</location>
		<location id="id9" x="-306" y="-136">
			<name x="-297" y="-170">EndLoop</name>
			<urgent/>
		</location>
		<location id="id10" x="-306" y="-272">
			<name x="-400" y="-306">ProcessVideo</name>
		</location>
		<location id="id11" x="-306" y="-339">
			<name x="-399" y="-365">ReceiveData</name>
			<committed/>
		</location>
		<location id="id12" x="-306" y="-407">
			<name x="-357" y="-441">Record</name>
			<label kind="invariant" x="-289" y="-416">x&lt;=sleep05</label>
		</location>
		<location id="id13" x="-306" y="-476">
			<name x="-383" y="-510">preRecord</name>
			<label kind="invariant" x="-289" y="-484">x&lt;=sleep09</label>
		</location>
		<location id="id14" x="-306" y="-612">
			<name x="-316" y="-646">StartLoop</name>
		</location>
		<location id="id15" x="-306" y="-544">
			<name x="-382" y="-561">Recive_S</name>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-297" y="-187">go!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-297" y="-255">go!</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id13"/>
			<label kind="guard" x="-280" y="-549">not S[feed_id]</label>
			<label kind="synchronisation" x="-280" y="-518">go!</label>
			<label kind="assignment" x="-280" y="-532">x:=0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id14"/>
			<nail x="-442" y="-273"/>
			<nail x="-442" y="-544"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-297" y="-399">x==sleep05</label>
			<label kind="assignment" x="-297" y="-382">x:=0, R[feed_id]=false</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-298" y="-467">x==sleep09</label>
			<label kind="assignment" x="-297" y="-452">x:=0, R[feed_id]=true</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-289" y="-603">S[feed_id]</label>
			<label kind="synchronisation" x="-289" y="-586">go!</label>
			<label kind="assignment" x="-263" y="-586">y:=0</label>
		</transition>
	</template>
	<template>
		<name>ItemFeeder</name>
		<parameter>f_id feed_id</parameter>
		<declaration>// Place local declarations here.
clock x;        //per element clock
</declaration>
		<location id="id16" x="-136" y="-323">
		</location>
		<location id="id17" x="-136" y="-408">
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id16"/>
			<target ref="id16"/>
			<nail x="-170" y="-289"/>
			<nail x="-136" y="-289"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="guard" x="-238" y="-365">MAX_ITEMS&lt;=ITEM_COUNT</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="guard" x="-93" y="-442">x&gt;=sleep23 and
MAX_ITEMS&gt;ITEM_COUNT</label>
			<label kind="synchronisation" x="-93" y="-408">ItemArrive[feed_id]!</label>
			<label kind="assignment" x="-93" y="-391">x:=0</label>
			<nail x="-102" y="-374"/>
			<nail x="-102" y="-433"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
//Item = Item();
//ItemFeeder0 = ItemFeeder(0);
//ItemFeeder1 = ItemFeeder(1);
// List one or more processes to be composed into a system.
system Item, Controller, ItemFeeder,  Video;</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Item(0,0).LeftVideoZone</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt;(Item(0,0).LeftVideoZone and Item(0,0).t1 ==20)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Video(0).On</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt; Video(0).Off</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (Video(0).Finish imply ( (Video(0).x &gt;=4) and (Item(0,0).VideoZone or Item(1,0).VideoZone ) ) )</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] forall(i:f_id) (Video(i).Finish imply ( (Video(i).x &gt;=4) and (Item(0,i).VideoZone or Item(1,i).VideoZone ) ) )</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (RECORD &gt;= ITEM_COUNT) and 
(Video(0).On imply (Item(0,0).VideoZone or Item(1,0).VideoZone)) and 
(Video(0).Finish imply ((Video(0).x &gt;=4) and (Item(0,0).VideoZone or Item(1,0).VideoZone))) 
</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (RECORD &lt;= ITEM_COUNT) and 
((Item(0,0).initial and Item(1,0).initial) imply RECORD==ITEM_COUNT) and 
(Video(0).On imply (Item(0,0).VideoZone or Item(1,0).VideoZone)) and 
(Video(0).Finish imply ((Video(0).x &gt;=4) and (Item(0,0).VideoZone or Item(1,0).VideoZone))) 
</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (Item(0,0).initial and Item(1,0).initial) imply RECORD==ITEM_COUNT</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] Video(0).On imply (Item(0,0).VideoZone or Item(1,0).VideoZone ) </formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
